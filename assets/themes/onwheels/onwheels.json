{
  "id": "onwheels",
  "title": {
    "en": "OnWheels"
  },
  "description": {
    "en": "On this map, publicly weelchair accessible places are shown and can be easily added"
  },
  "maintainer": "MapComplete",
  "icon": "./assets/themes/onwheels/crest.svg",
  "version": "0",
  "startLat": 50.8465573,
  "defaultBackgroundId": "CartoDB.Voyager",
  "startLon": 4.351697,
  "startZoom": 16,
  "widenFactor": 2,
  "hideFromOverview": true,
  "layers": [
    {
      "builtin": "bike_repair_station",
      "override": {
        "mapRendering": [
          {
            "icon": {
              "render": "./assets/themes/onwheels/repair.svg",
              "mappings": [
                {
                  "if": "service:bicycle:pump=yes",
                  "then": "./assets/themes/onwheels/bicycle_pump.svg"
                }
              ]
            },
            "iconSize": "40,40,bottom"
          }
        ]
      }
    },
    "bike_shop",
    {
      "builtin": "cafe_pub",
      "override": {
        "mapRendering": [
          {
            "icon": "./assets/themes/onwheels/cafe.svg",
            "iconSize": "40,40,bottom",
            "label": null
          }
        ]
      }
    },
    "entrance",
    {
      "builtin": "food",
      "override": {
        "mapRendering": [
          {
            "icon": "./assets/themes/onwheels/restaurant.svg",
            "iconSize": "40,40,bottom",
            "label": null
          }
        ]
      }
    },
    {
      "builtin": "kerbs",
      "override": {
        "mapRendering": [
          {
            "icon": {
              "render": "./assets/themes/onwheels/cone.svg"
            }
          }
        ]
      }
    },
    {
      "builtin": "parking",
      "override": {
        "mapRendering": [
          {
            "icon": "./assets/themes/onwheels/parking.svg",
            "iconSize": "40,40,bottom"
          },
          {
            "color": "#225f92"
          }
        ]
      }
    },
    "picnic_table",
    "school",
    {
      "builtin": "shops",
      "override": {
        "mapRendering": [
          {
            "icon": "./assets/themes/onwheels/shop.svg",
            "iconSize": "40,40,bottom",
            "label": null
          },
          {
            "color": "#ea4a94"
          }
        ]
      }
    },
    {
      "builtin": "toilet",
      "override": {
        "mapRendering": [
          {
            "icon": "./assets/themes/onwheels/toilet.svg",
            "iconSize": "40,40,bottom"
          }
        ]
      }
    },
    "viewpoint",
    {
      "builtin": "pharmacy",
      "override": {
        "mapRendering": [
          {
            "icon": "./assets/themes/onwheels/pharmacy.svg",
            "iconSize": "40,40,bottom",
            "label": null
          }
        ]
      }
    },
    {
      "builtin": "doctors",
      "override": {
        "mapRendering": [
          {
            "icon": "./assets/themes/onwheels/doctor.svg",
            "iconSize": "40,40,bottom"
          }
        ]
      }
    },
    {
      "builtin": "hospital",
      "override": {
        "mapRendering": [
          {
            "icon": "./assets/themes/onwheels/hospital.svg",
            "iconSize": "40,40,bottom"
          },
          {
            "color": "#dd463b"
          }
        ]
      }
    },
    {
      "builtin": "reception_desk",
      "override": {
        "mapRendering": [
          {
            "icon": "./assets/themes/onwheels/reception.svg",
            "iconSize": "40,40,bottom"
          }
        ]
      }
    },
    "walls_and_buildings",
    "elevator",
    {
      "builtin": "hotel",
      "override": {
        "mapRendering": [
          {
            "icon": "./assets/themes/onwheels/hotel.svg",
            "iconSize": "40,40,bottom"
          }
        ]
      }
    }
  ],
  "overrideAll": {
    "+calculatedTags": [
      "_poi_walls_and_buildings_entrance_properties=feat.closestn('walls_and_buildings', 1, undefined, 1000).map(w => ({id: w.feat.properties.id, width: w.feat.properties['_entrance:width']}))[0]",
      "_poi_entrance:id=JSON.parce(feat.properties._poi_walls_and_buildings_entrance_properteis)?.id",
      "_poi_entrance:width=JSON.parse(feat.properties._poi_walls_and_buildings_entrance_properties)?.width"
    ],
    "+tagRenderings": [
      {
        "id": "_poi_entrance:width",
        "condition": {
          "and": [
            "entrance=",
            "kerb="
          ]
        },
        "render": {
          "en": "This door has a width of {canonical(_poi_entrance:width)} meter",
          "nl": "Deze deur heeft een breedte van {canonical(_poi_entrance:width)} meter",
          "de": "Diese TÃ¼r hat eine Durchgangsbreite von {canonical(_poi_entrance:width)} Meter",
          "es": "Esta puerta tiene una ancho de {canonical(_poi_entrance:width)} metros"
        },
        "freeform": {
          "key": "_poi_entrance:width",
          "type": "distance"
        },
        "mappings": [
          {
            "if": "_poi_entrance:width=",
            "then": {
              "en": "This entrance has no width information"
            }
          }
        ]
      }
    ],
    "minzoom": 15
  }
}